{"version":3,"sources":["components/SortGoods/SortGoods.jsx","App.jsx","index.jsx"],"names":["SortGoods","goods","map","good","goodsFromServer","SORT_FIELD_AZ","SORT_FIELD_LENGTH","SORT_FIELD_REVERSE","App","useState","sortType","setSortType","sortedGoods","type","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","isReset","className","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAAaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SCGjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAgB,KAChBC,EAAoB,SACpBC,EAAqB,UAqBpB,IAAMC,EAAM,WACjB,MAAgCC,mBAAS,CAAC,GAAI,KAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EApBR,SAAwBX,EAAOY,GAC7B,IAAMD,EAAW,YAAOX,GAcxB,OAZIY,EAAK,KAAOR,GACdO,EAAYE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAGrDH,EAAK,KAAOP,GACdM,EAAYE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAGtDL,EAAK,KAAON,GACdK,EAAYO,UAGPP,EAKaQ,CAAehB,EAAiBM,GAE9CW,EAxBiB,KAwBPX,EAAS,IAxBF,KAyBlBA,EAAS,GAQd,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACET,KAAK,SACLS,UACEC,IAAG,iBAAkB,CAAE,WAAYb,EAAS,KAAOL,IAErDmB,QAAS,kBAAMb,EAAY,CAACN,EAAeK,EAAS,MALtD,iCAUA,wBACEG,KAAK,SACLS,UACEC,IAAG,oBACD,CAAE,WAAYb,EAAS,KAAOJ,IAElCkB,QAAS,kBAAMb,EAAY,CAACL,EAAmBI,EAAS,MAN1D,4BAWA,wBACEG,KAAK,SACLS,UACEC,IAAG,oBACD,CAAE,WAAYb,EAAS,KAAOH,IAElCiB,QApCU,kBAAMb,EACtBD,EAAS,KAAOH,EACZ,CAACG,EAAS,GA7BO,IA8BjB,CAACA,EAAS,GAAIH,KA2Bd,qBAWCc,GACC,wBACER,KAAK,SACLS,UAAU,4BACVE,QAAS,kBAAMb,EAAY,CAAC,GAAI,MAHlC,sBAUJ,cAAC,EAAD,CAAWV,MAAOW,QClGxBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.35527a31.chunk.js","sourcesContent":["export const SortGoods = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>{good}</li>\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\nimport { SortGoods } from './components/SortGoods/SortGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_AZ = 'az';\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_REVERSE = 'reverse';\nconst SORT_FIELD_RESET = '';\n\nfunction getSortedGoods(goods, type) {\n  const sortedGoods = [...goods];\n\n  if (type[0] === SORT_FIELD_AZ) {\n    sortedGoods.sort((good1, good2) => good1.localeCompare(good2));\n  }\n\n  if (type[0] === SORT_FIELD_LENGTH) {\n    sortedGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (type[1] === SORT_FIELD_REVERSE) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState(['', '']);\n  const sortedGoods = getSortedGoods(goodsFromServer, sortType);\n\n  const isReset = sortType[0] !== SORT_FIELD_RESET\n    || sortType[1] !== SORT_FIELD_RESET;\n\n  const isReverse = () => setSortType(\n    sortType[1] === SORT_FIELD_REVERSE\n      ? [sortType[0], SORT_FIELD_RESET]\n      : [sortType[0], SORT_FIELD_REVERSE],\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button is-info', { 'is-light': sortType[0] !== SORT_FIELD_AZ })\n          }\n          onClick={() => setSortType([SORT_FIELD_AZ, sortType[1]])}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-success',\n              { 'is-light': sortType[0] !== SORT_FIELD_LENGTH })\n          }\n          onClick={() => setSortType([SORT_FIELD_LENGTH, sortType[1]])}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-warning',\n              { 'is-light': sortType[1] !== SORT_FIELD_REVERSE })\n          }\n          onClick={isReverse}\n        >\n          Reverse\n        </button>\n\n        {isReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => setSortType(['', ''])}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <SortGoods goods={sortedGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}